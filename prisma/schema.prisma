// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model Product {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  price     Float
  image     String
  slug      String
  category  String
  countInStock Int
  description String
  tags      String[]
  isFeatured Boolean
  isOnSale Boolean
  salePrice Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String @id @default(auto()) @map("_id") @db.ObjectId
    userId            String @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String   @db.ObjectId
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    password      String?
    isAdmin       Boolean   @default(false)
    isEmployee    Boolean   @default(false)
    newsletter    Boolean   @default(false)
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    id         String @id @default(auto()) @map("_id") @db.ObjectId
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Announcement {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  link      String?
  description String?
  isPublished Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  link      String?
  description String?
  image     String?
  isFeatured Boolean @default(false)
  isPublished Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Note {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  link      String?
  description String?
  image     String?
  isPublished Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}